{"version":3,"sources":["logo.svg","components/navtab/index.js","components/wrapper/index.js","components/title/index.js","components/EmpCard/index.js","components/pages/home.js","components/utils/API.js","components/newEmployee.js","components/pages/add.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavTabs","location","useLocation","className","to","pathname","Wrapper","props","children","Title","EmpCard","alt","image","title","src","images","original","url","name","email","role","department","onClick","removeEmployee","id","fs","require","Home","state","empFile","employees","filter","emp","setState","writeFileSync","JSON","stringify","err","this","map","removeEmp","key","firstName","lastName","React","Component","query","axios","get","EmpForm","searchGiphy","API","then","res","data","catch","console","log","event","value","target","preventDefault","empArr","readFileSync","emps","parse","push","alert","class","type","onChange","handleChange","for","handleSubmit","Add","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.dfd93a04.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nfunction NavTabs() {\n    const location = useLocation();\n\n    return (\n        <ul>\n            <li className=\"nav-item\">\n                <Link to=\"/\" className={location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}>\n                Home View\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link to=\"/add\" className={location.pathname === \"/add\" ? \"nav-link active\" : \"nav-link\"}>\n                Add New Employee\n                </Link>\n            </li>\n        </ul>\n    );\n}\n\nexport default NavTabs;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\n\nfunction EmpCard(props) {\n    return (\n        <div className=\"card\">\n            <div className=\"img-container\">\n                <img alt={props.image[0].title} className=\"img-fluid\" src={props.image[0].images.original.url} />\n            </div>\n            <div className=\"content\">\n                <ul>\n                    <li>\n                        <strong>Name:</strong> {props.name}\n                    </li>\n                    <li>\n                        <strong>Email:</strong> {props.email}\n                    </li>\n                    <li>\n                        <strong>Role:</strong> {props.role}\n                    </li>\n                    <li>\n                        <strong>Department:</strong> {props.department}\n                    </li>\n                </ul>\n            </div>\n            <span onClick={() => props.removeEmployee(props.id)} className=\"remove\">\n                ùòÖ\n            </span>\n        </div>\n    );\n}\n\nexport default EmpCard;","import React from 'react';\nimport Wrapper from \"../wrapper\";\nimport Title from \"../title\";\nimport empFile from \"../../employees.json\";\nimport EmpCard from \"../EmpCard\";\n\nconst fs = require(\"fs\");\n\nclass Home extends React.Component {\n\n    state = {\n        empFile\n    };\n\n    removeEmployee = id => {\n        const employees = this.state.empFile.filter(emp => emp.id !== id);\n\n        this.setState({ employees });\n\n        fs.writeFileSync(\"../../employees.json\", JSON.stringify(employees, null, 2), (err) => {\n            if (err) throw err;\n        });\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <Title>All Employees</Title>\n                {this.state.empFile.map(emp => (\n                    <EmpCard \n                        removeEmp = {this.removeEmployee}\n                        id = {emp.id}\n                        key = {emp.id}\n                        name = {emp.firstName + \" \" + emp.lastName}\n                        image = {emp.image}\n                        email = {emp.email}\n                        role = {emp.role}\n                        department = {emp.department}\n                    />\n                ))}\n            </Wrapper>\n        );\n    }\n}\n\nexport default Home;\n","import axios from \"axios\";\n\nconst BASEURL = \"https://api.giphy.com/v1/gifs/search?q=\";\nconst APIKEY = \"&api_key=dc6zaTOxFJmzC&limit=20\";\n\nexport default {\n    search: function(query) {\n        return axios.get(BASEURL + query + APIKEY);\n    }\n}","import React from \"react\";\nimport API from \"./utils/API\";\n\nconst fs = require(\"fs\");\n\nclass EmpForm extends React.Component {\n    \n    state = {\n        firstName: \"\",\n        lastName: \"\",\n        image: [],\n        email: \"\",\n        role: \"\",\n        department: \"\"\n    }\n\n    handleChange(event) {\n        let value = event.target.value;\n        let name = event.target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    searchGiphy = query => {\n        API.search(query)\n        .then(res => this.setState({ image: res.data.data }))\n        .catch(err => console.log(err));\n    };\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        this.searchGiphy(this.state.image);\n\n        let data = this.state;\n        let empArr = fs.readFileSync(\"../employee.json\", \"utf-8\", (emps) => {\n            return JSON.parse(emps);\n        });\n\n        fs.writeFileSync(\"../employee.json\", JSON.stringify(empArr.push(data), null, 2), (err) => {\n            if (err) throw err;\n            alert(\"Employee inserted: \" + this.state.firstName + \" \" + this.state.lastName + \".\");\n        });\n\n        this.setState({\n            firstName: \"\",\n            lastName: \"\",\n            image: \"\",\n            email: \"\",\n            role: \"\",\n            department: \"\"\n        });\n    }\n\n    render() {\n        return(\n            <form class=\"col s12\">\n                <div class=\"row\">\n                    <div class=\"input-field col s6\">\n                        <input name=\"firstName\" id=\"first_name\" type=\"text\" class=\"validate\" onChange={this.handleChange} value={this.state.firstName} />\n                        <label for=\"first_name\">First Name</label>\n                    </div>\n                    <div class=\"input-field col s6\">\n                        <input name=\"lastName\" id=\"last_name\" type=\"text\" class=\"validate\" onChange={this.handleChange} value={this.state.lastName} />\n                        <label for=\"last_name\">Last Name</label>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"input-field col s12\">\n                        <input name=\"image\" id=\"image\" type=\"text\" class=\"validate\" onChange={this.handleChange} value={this.state.image} />\n                        <label for=\"image\">Who does he look like.</label>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"input-field col s12\">\n                        <input name=\"email\" id=\"email\" type=\"text\" class=\"validate\" onChange={this.handleChange} value={this.state.email} />\n                        <label for=\"email\">Email</label>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"input-field col s12\">\n                        <input name=\"role\" id=\"role\" type=\"text\" class=\"validate\" onChange={this.handleChange} value={this.state.role} />\n                        <label for=\"role\">Role</label>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"input-field col s12\">\n                        <input name=\"department\" id=\"department\" type=\"text\" class=\"validate\" onChange={this.handleChange} value={this.state.department} />\n                        <label for=\"department\">Department</label>\n                    </div>\n                </div>\n                <input onClick={this.handleSubmit} type=\"submit\" value=\"Submit\">Submit</input>\n            </form>\n        );\n    }\n}\n\nexport default EmpForm;","import React from \"react\";\nimport EmpForm from \"../newEmployee\";\nimport Wrapper from \"../wrapper\";\nimport Title from \"../title\";\n\nfunction Add() {\n    return (\n        <Wrapper>\n            <Title>Add a New Employee</Title>\n            <div class=\"body\">\n                <EmpForm />\n            </div>\n        </Wrapper>\n    );\n}\n\nexport default Add;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport NavTabs from \"./components/navtab\";\nimport Home from \"./components/pages/home\";\nimport Add from \"./components/pages/add\";\n\n//Add <Intro>\nfunction App() {\n  return (\n    <Router>\n        <NavTabs />\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/add\" component={Add} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}